{"version":3,"sources":["imgs/bonito_logo-03.png","imgs/Lauren.jpg","imgs/Cate.png","imgs/Anthony.jpg","imgs/Laura.PNG","imgs/brian.jpg","assets/logo.svg","comps/modules/Navbar.js","serviceWorker.js","firestore.js","comps/modules/SearchBar.js","comps/HomePage.js","comps/LoginPage.js","cont/LoginController.js","cont/VotingController.js","comps/location/UpVoteButton.js","comps/location/DownVoteButton.js","comps/location/LocationInfo.js","comps/modules/LocationsList.js","cont/LocationsController.js","comps/modules/EmbeddedMap.js","comps/modules/Modal.js","comps/SpecingPage.js","comps/modules/TeamCard.js","comps/AboutPage.js","comps/ResultsPage.js","cont/PlacesController.js","comps/App.js","index.js","assets/checkmark.svg"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","NavTabs","props","classes","React","useState","setValue","open","setOpen","anchorRef","useRef","handleClose","event","current","contains","target","handleListKeyDown","key","preventDefault","handleChange","newValue","prevOpen","useEffect","focus","handleSignOut","console","log","loginLink","Grid","container","alignItems","justify","direction","Tabs","className","onChange","Tab","label","component","Link","to","loggedIn","Button","ref","aria-controls","undefined","aria-haspopup","onClick","localStorage","getItem","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","id","onKeyDown","MenuItem","AppBar","position","boxShadow","Toolbar","Typography","variant","href","src","bonito_logo","Boolean","window","location","hostname","match","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","require","database","db","padding","display","height","input","marginLeft","spacing","flex","fontSize","fontWeight","iconButton","iconSearch","width","color","SearchBar","setAnchorEl","userInput","setInput","goDirect","setDirect","search","InputBase","placeholder","inputProps","value","IconButton","type","aria-label","currentTarget","grabSearchInput","HomePage","grabSearchInputInter","this","paddingRight","marginBottom","Component","link","margin","LoginPage","signInCallback","voteTotal","user","updatefunction","ingredientID","locationID","locationInfo","upvote","ingredID","locID","batch","firestore","locRef","collection","doc","userLocRef","uid","newUpvotes","upvotes","set","downvote","update","dvcounter","commit","then","catch","error","newDownvotes","downvotes","newDVC","UpVoteButton","canVote","get","exists","data","signedIn","state","handleClick","disabled","DownVote","LocationInfo","errorWarning","item","xs","md","lg","name","address","newUserName","date","LocationsList","getUserName","updateLocationDetails","querySnapshot","setState","searchRes","forEach","newData","newAddress","newDate","time","toDate","toString","newDVotes","newLat","lat","newLong","long","newName","newUVotes","newUID","userid","userName","tempList","newLocInfo","userID","push","bind","EmbeddedMap","res","newObj","displayMarkers","map","store","index","latitude","lng","longitude","text","google","zoom","initialCenter","GoogleApiWrapper","withStyles","marginTop","borderRadius","border","transitions","create","fontFamily","join","fade","primary","main","borderColor","BootstrapButton","textTransform","lineHeight","flexWrap","createMuiTheme","Modal","Dialog","onClose","DialogTitle","title","DialogContent","content","NewLocationModal","submit","latLng","setLatLng","FormHelperText","locationItems","noValidate","ThemeProvider","FormControl","fullWidth","autocompletionRequest","bounds","componentRestrictions","country","types","onSelect","geocodeByAddress","results","getLatLng","finally","disableRipple","FieldValue","serverTimestamp","displayName","addNewLocation","icon","checkmark","ingredName","SpecingPage","checkLocations","empty","isEmpty","handleLoc","modalOpen","handleMap","ingredientName","cannotVote","suggestLoc","mapUpdated","card","textAlign","media","TeamCard","FirstName","LastName","Position","picture","Card","CardActionArea","CardMedia","image","CardContent","AboutPage","featuredCards","sm","xl","Anthony","Brian","Cate","Laura","Lauren","NutrixURL","ResultsPage","ingredList","setList","fetchingData","setFetch","setID","stateName","setName","displayList","food","a","axios","headers","params","query","self","common_general","common_restaurant","response","getNutrix","docRef","storeIngred","length","i","ListItem","button","ListItemText","List","pathname","App","handleSignIn","provider","auth","GoogleAuthProvider","signInWithPopup","result","setItem","code","message","email","credential","signOut","loading","authUnsubFunction","onAuthStateChanged","firebaseUser","errorMessage","navbar","exact","path","render","routerProps","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e0c24a84.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bonito_logo-03.7711df32.png\";","module.exports = __webpack_public_path__ + \"static/media/Lauren.ee8acd2b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Cate.3ff3e3cc.png\";","module.exports = __webpack_public_path__ + \"static/media/Anthony.e266279a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Laura.03887fb5.PNG\";","module.exports = __webpack_public_path__ + \"static/media/brian.f204d0ac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Button, Popper, Grow, Paper, \r\n    ClickAwayListener, MenuList\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\r\nimport bonito_logo from '../../imgs/bonito_logo-03.png';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`nav-tabpanel-${index}`}\r\n            aria-labelledby={`nav-tab-${index}`}\r\n            {...other}\r\n        >\r\n            <Box p={3}>{children}</Box>\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n\r\n}));\r\n\r\nexport default function NavTabs(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n\r\n    const handleToggle = () => {\r\n        setOpen(prevOpen => !prevOpen);\r\n    };\r\n\r\n    const handleClose = event => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n    \r\n    function handleListKeyDown(event) {\r\n        if (event.key === 'Tab') {\r\n        event.preventDefault();\r\n        setOpen(false);\r\n        }\r\n    }\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    // return focus to the button when we transitioned from !open -> open\r\n    const prevOpen = React.useRef(open);\r\n    React.useEffect(() => {\r\n        if (prevOpen.current === true && open === false) {\r\n        anchorRef.current.focus();\r\n        }\r\n        prevOpen.current = open;\r\n    }, [open]);\r\n \r\n    const handleSignOut = (event) => {\r\n        console.log(\"signed out\")\r\n        event.preventDefault();\r\n        props.handleSignOut();\r\n        handleClose(event);\r\n    }\r\n\r\n    var loginLink = (\r\n        <Grid container alignItems=\"flex-start\" justify=\"flex-end\" direction=\"row\">\r\n            <Tabs\r\n            className=\"nav-tabs\"\r\n            //value={value}\r\n            onChange={handleChange}\r\n            >   \r\n                <Tab label=\"Find Ingredients\" component={Link} to=\"/\" />\r\n                <Tab label=\"About\"component={Link} to='/AboutPage' />\r\n                <Tab label=\"Login\" component={Link} to='/LoginPage' />\r\n            </Tabs>\r\n        </Grid>\r\n    )\r\n    if (props.loggedIn) {\r\n        loginLink = (\r\n            <Grid container alignItems=\"flex-start\" justify=\"flex-end\" direction=\"row\">\r\n                <Tabs\r\n                className=\"nav-tabs\"\r\n                //value={value}\r\n                onChange={handleChange}\r\n                >   \r\n                    <Tab label=\"Find Ingredients\" component={Link} to=\"/\" />\r\n                    <Tab label=\"About\"component={Link} to='/AboutPage' />\r\n                </Tabs>\r\n                <Button\r\n                ref={anchorRef}\r\n                aria-controls={open ? 'menu-list-grow' : undefined}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleToggle} \r\n                >\r\n                    Hello! {localStorage.getItem(\"userName\")}\r\n                </Button>\r\n                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                {({ TransitionProps, placement }) => (\r\n                    <Grow\r\n                    {...TransitionProps}\r\n                    style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                    >\r\n                    <Paper>\r\n                        <ClickAwayListener onClickAway={handleClose}>\r\n                        <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                            <MenuItem onClick={handleSignOut}>Logout</MenuItem>\r\n                        </MenuList>\r\n                        </ClickAwayListener>\r\n                    </Paper>\r\n                    </Grow>\r\n                )}\r\n                </Popper>\r\n            </Grid>\r\n        );\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" style={{ background: 'transparent', boxShadow: 'none'}} className=\"nav-content\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\">\r\n                        <a href=\"/\"><img src={bonito_logo} className=\"bonito-logo\" /></a>\r\n                    </Typography>\r\n                    {loginLink}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './comps/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport firebase from 'firebase/app';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyA18aSKV9qp66x5s0FL6y_xcdjlBeBRVng\",\r\n    authDomain: \"bonito-collab.firebaseapp.com\",\r\n    databaseURL: \"https://bonito-collab.firebaseio.com\",\r\n    projectId: \"bonito-collab\",\r\n    storageBucket: \"bonito-collab.appspot.com\",\r\n    messagingSenderId: \"49830494344\",\r\n    appId: \"1:49830494344:web:f4a868b361ec362f571f3d\",\r\n    measurementId: \"G-683YLNRKFH\"\r\n  };\r\nvar test = 'ingredient';\r\nfirebase.initializeApp(config);\r\nrequire('firebase/app');\r\nrequire('firebase/auth');\r\nrequire('firebase/database');\r\n\r\n\r\nconst dbTest = firebase.database();\r\ntest = dbTest.ref('ingredients/');\r\n\r\nexport const db = firebase;\r\n\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport deburr from 'lodash/deburr';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport match from 'autosuggest-highlight/match';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport {Popper, Popover} from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport { db, ingred } from '../../firestore';\r\nrequire('firebase/firestore')\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\tpadding: '2px 4px',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\theight: 130\r\n\t},\r\n\tinput: {\r\n\t\tmarginLeft: theme.spacing(1),\r\n\t\tflex: 1,\r\n\t\tfontSize: '84px',\r\n\t\tfontWeight: 'bold',\r\n\t\tpadding: '0px 20px'\r\n\t},\r\n\ticonButton: {\r\n\t\tpadding: '10px 20px 10px 20px'\r\n\t},\r\n\ticonSearch: {\r\n\t\twidth: '84px',\r\n\t\theight: '84px',\r\n\t\tcolor: '#0C9A89',\r\n\t\tpadding: '10px 20px 10px 20px'\r\n\t}\r\n}));\r\n\r\nexport default function SearchBar(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [userInput, setInput] = useState(\"\");\r\n  const [goDirect, setDirect] = useState(false);\r\n  const handleClick = (event) => {\r\n    event.preventDefault();\r\n    setAnchorEl(event.currentTarget);\r\n    props.grabSearchInput(userInput);\r\n    setDirect(true);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    \r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n  var search = (\r\n    <div>\r\n      <Paper component=\"form\" className={classes.root}>\r\n        <InputBase\r\n          className={classes.input}\r\n          placeholder=\"Bonito\"\r\n          inputProps={{ 'aria-label': 'search bonito' }}\r\n          onChange={event => setInput(event.target.value)}\r\n        />\r\n        <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\" onClick={handleClick}>\r\n          <SearchIcon className={classes.iconSearch} />\r\n        </IconButton>\r\n      </Paper>\r\n    </div>\r\n  );\r\n  if (goDirect) {\r\n    search = <div><Redirect to=\"/results\"></Redirect></div>\r\n  }\r\n  return search;\r\n}\r\n\r\n// const suggestions = ingred;\r\n// // db.firestore().collection('ingredients');\r\n// console.log(suggestions);\r\n\r\n// function renderInputComponent(inputProps) {\r\n//   const { classes, inputRef = () => {}, ref, ...other } = inputProps;\r\n\r\n//   return (\r\n//     <TextField\r\n//       fullWidth\r\n//       InputProps={{\r\n//         inputRef: node => {\r\n//           ref(node);\r\n//           inputRef(node);\r\n//         },\r\n//         classes: {\r\n//           input: classes.input,\r\n//         },\r\n//       }}\r\n//       {...other}\r\n//     />\r\n//   );\r\n// }\r\n\r\n// function renderSuggestion(suggestion, { query, isHighlighted }) {\r\n//   const matches = match(suggestion.name, query);\r\n//   const parts = parse(suggestion.name, matches);\r\n\r\n//   return (\r\n//     <MenuItem selected={isHighlighted} component=\"div\">\r\n//       <div>\r\n//         {parts.map(part => (\r\n//           <span key={part.text} style={{ fontWeight: part.highlight ? 500 : 400 }}>\r\n//             {part.text}\r\n//           </span>\r\n//         ))}\r\n//       </div>\r\n//     </MenuItem>\r\n//   );\r\n// }\r\n\r\n// function getSuggestions(value) {\r\n//   const inputValue = deburr(value.trim()).toLowerCase();\r\n//   const inputLength = inputValue.length;\r\n//   let count = 0;\r\n\r\n//   return inputLength === 0\r\n//     ? []\r\n//     : suggestions.filter(suggestion => {\r\n//         const keep =\r\n//           count < 5 && suggestion.name.slice(0, inputLength).toLowerCase() === inputValue;\r\n\r\n//         if (keep) {\r\n//           count += 1;\r\n//         }\r\n\r\n//         return keep;\r\n//       });\r\n// }\r\n\r\n// function getSuggestionValue(suggestion) {\r\n//   return suggestion.name;\r\n// }\r\n\r\n// export default function IntegrationAutosuggest() {\r\n//   const classes = useStyles();\r\n//   const [anchorEl, setAnchorEl] = React.useState(null);\r\n//   const [state, setState] = React.useState({\r\n//     single: '',\r\n//     popper: '',\r\n//   });\r\n\r\n//   const [stateSuggestions, setSuggestions] = React.useState([]);\r\n\r\n//   const handleSuggestionsFetchRequested = ({ value }) => {\r\n//     setSuggestions(getSuggestions(value));\r\n//   };\r\n\r\n//   const handleSuggestionsClearRequested = () => {\r\n//     setSuggestions([]);\r\n//   };\r\n\r\n//   const handleChange = name => (event, { newValue }) => {\r\n//     setState({\r\n//       ...state,\r\n//       [name]: newValue,\r\n//     });\r\n//   };\r\n\r\n//   const autosuggestProps = {\r\n//     renderInputComponent,\r\n//     suggestions: stateSuggestions,\r\n//     onSuggestionsFetchRequested: handleSuggestionsFetchRequested,\r\n//     onSuggestionsClearRequested: handleSuggestionsClearRequested,\r\n//     getSuggestionValue,\r\n//     renderSuggestion,\r\n//   };\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <Autosuggest\r\n//         {...autosuggestProps}\r\n//         inputProps={{\r\n//           classes,\r\n//           id: 'react-autosuggest-simple',\r\n//           placeholder: 'Bonito',\r\n//           value: state.single,\r\n//           onChange: handleChange('single'),\r\n//         }}\r\n//         // theme={{\r\n//         //   container: classes.container,\r\n//         //   suggestionsContainerOpen: classes.suggestionsContainerOpen,\r\n//         //   suggestionsList: classes.suggestionsList,\r\n//         //   suggestion: classes.suggestion,\r\n//         // }}\r\n//         renderSuggestionsContainer={options => (\r\n//           <Paper {...options.containerProps} square>\r\n//             {options.children}\r\n//           </Paper>\r\n//         )}\r\n//       />\r\n//     </div>\r\n//   );\r\n// }\r\n","import React, { Component } from 'react';\r\nimport SearchBar from './modules/SearchBar';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Input } from '@material-ui/core';\r\n\r\nimport LocationIcon from '@material-ui/icons/LocationOn';\r\n\r\nexport default class HomePage extends Component {\r\n\t// pre-conditions: sign-in status recieved as true or false in props\r\n\t// post-conditions: passes props to render proper navbar links\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\tgrabSearchInputInter = (input) => {\r\n\t\tthis.props.grabSearchInput(input);\r\n\t};\r\n\r\n\t// post-conditions:\r\n\t//      if user signed in, render \"Signed in as 'username'\" link\r\n\t//      otherwise render \"Sign In\" link.\r\n\trender() {\r\n\t\treturn (<div className=\"homepage-body\">\r\n\t\t\t<div className=\"search-container\">\r\n\t\t\t\t<div className=\"search-label\">Where can I buy</div>\r\n\r\n\t\t\t\t<SearchBar grabSearchInput={this.grabSearchInputInter}/>\r\n\t\t\t\t<div className=\"search-location\"><LocationIcon style={{ height: '22px', width: '22px', paddingRight: '3px', marginBottom: '-3px' }} />Seattle, WA</div>\r\n\t\t\t\t<div className=\"search-description\">Source hard-to-find ingredients for your next home-cooked meal.</div>\r\n\r\n\t\t\t</div>\r\n\t\t</div >);\r\n\t}\r\n}","import React, { Component } from 'react';\r\n//import LoginController from '../cont/LoginController';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    link: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n// takes in boolean variable indicating if user is logged in\r\nexport default function LoginPage(props) {\r\n    // renders login page for sign in\r\n    // if user is signed in, redirects user to homePage\r\n    // if LoginController determines login credentials are invalid,\r\n    // render an error message displaying login was unsuccessful.\r\n\r\n\r\n    const handleLogIn = (event) => {\r\n        event.preventDefault();\r\n        console.log(props)\r\n        props.signInCallback();\r\n    }\r\n    return (\r\n        <div className=\"content-container\"> \r\n            <div className=\"page-title\">Sign In</div>\r\n            <p>Please sign in with Google to continue.</p>\r\n            <Button onClick={handleLogIn}>\r\n           LOGIN WITH GOOGLE</Button>     \r\n        </div>\r\n    )\r\n}\r\n","import firebase from 'firebase';\r\nrequire(\"firebase/firestore\");\r\n\r\nexport default class LoginController {\r\n    constructor(triggerState) {\r\n        this.uid = \"\";\r\n        this.token = \"\";\r\n        this.name = \"\";\r\n        this.user = \"\";\r\n        this.toggleSignIn = this.toggleSignIn.bind(this);\r\n        this.signedIn = this.signedIn.bind(this);\r\n        this.triggerState = triggerState;\r\n    };\r\n\r\n    // pre-conditions: Only used within the LoginPage.\r\n    // post-conditions: \r\n    //      if the user is signed in, returns a True boolean\r\n    //      otherwise returns false.\r\n    signedIn() {\r\n        return this.user;\r\n    };\r\n\r\n    /**\r\n     * Function called when clicking the Login/Logout button.\r\n     */\r\n    // [START buttoncallback]\r\n    toggleSignIn() {\r\n        console.log(\"toggleSignIn method called: \")\r\n        //if (!firebase.auth().currentUser) {\r\n            // [START createprovider]\r\n            var provider = new firebase.auth.GoogleAuthProvider();\r\n            // TODO: WHY IS THEN() NOT CALLED?\r\n            var userInfo = firebase.auth().signInWithPopup(provider).then(function(result) {\r\n                this.token = result.credential.accessToken;\r\n                this.uid = result.user.uid;\r\n                this.name = result.user.name;\r\n                this.user = result.user;\r\n                console.log(this.user);\r\n                console.log(\"controller method called: \")\r\n                this.triggerState();\r\n            }).catch(function(error) {\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                // The email of the user's account used.\r\n                var email = error.email;\r\n                // The firebase.auth.AuthCredential type that was used.\r\n                var credential = error.credential;\r\n            });\r\n       // } else {\r\n         //   firebase.auth().signOut();\r\n       // }\r\n    }\r\n\r\n    /**\r\n    * initApp handles setting up UI event listeners and registering Firebase auth listeners:\r\n    *  - firebase.auth().onAuthStateChanged: This listener is called when the user is signed in or\r\n    *    out, and that is where we update the UI.\r\n    *  - firebase.auth().getRedirectResult(): This promise completes when the user gets back from\r\n    *    the auth redirect flow. It is where you can get the OAuth access token from the IDP.\r\n    */\r\n    initApp() {\r\n\r\n        /*\r\n        \r\n        // Result from Redirect auth flow.\r\n        // [START getidptoken]\r\n        firebase.auth().getRedirectResult().then(function (result) {\r\n            if (result.credential) {\r\n                // This gives you a Google Access Token. You can use it to access the Google API.\r\n                var token = result.credential.accessToken;\r\n                // [START_EXCLUDE]\r\n                document.getElementById('quickstart-oauthtoken').textContent = token;\r\n            } else {\r\n                document.getElementById('quickstart-oauthtoken').textContent = 'null';\r\n                // [END_EXCLUDE]\r\n            }\r\n            // The signed-in user info.\r\n            var user = result.user;\r\n        }).catch(function (error) {\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            // The email of the user's account used.\r\n            var email = error.email;\r\n            // The firebase.auth.AuthCredential type that was used.\r\n            var credential = error.credential;\r\n            // [START_EXCLUDE]\r\n            if (errorCode === 'auth/account-exists-with-different-credential') {\r\n                alert('You have already signed up with a different auth provider for that email.');\r\n                // If you are using multiple auth providers on your app you should handle linking\r\n                // the user's accounts here.\r\n            } else {\r\n                console.error(error);\r\n            }\r\n            // [END_EXCLUDE]\r\n        });\r\n        // [END getidptoken]\r\n        // Listening for auth state changes.\r\n        // [START authstatelistener]\r\n        firebase.auth().onAuthStateChanged(function (user) {\r\n            if (user) {\r\n                // User is signed in.\r\n                var displayName = user.displayName;\r\n                var email = user.email;\r\n                var emailVerified = user.emailVerified;\r\n                var photoURL = user.photoURL;\r\n                var isAnonymous = user.isAnonymous;\r\n                var uid = user.uid;\r\n                var providerData = user.providerData;\r\n                // [START_EXCLUDE]\r\n                document.getElementById('quickstart-sign-in-status').textContent = 'Signed in';\r\n                document.getElementById('quickstart-sign-in').textContent = 'Sign out';\r\n                document.getElementById('quickstart-account-details').textContent = JSON.stringify(user, null, '  ');\r\n                // [END_EXCLUDE]\r\n            } else {\r\n                // User is signed out.\r\n                // [START_EXCLUDE]\r\n                document.getElementById('quickstart-sign-in-status').textContent = 'Signed out';\r\n                document.getElementById('quickstart-sign-in').textContent = 'Sign in with Google';\r\n                document.getElementById('quickstart-account-details').textContent = 'null';\r\n                document.getElementById('quickstart-oauthtoken').textContent = 'null';\r\n                // [END_EXCLUDE]\r\n            }\r\n            // [START_EXCLUDE]\r\n            document.getElementById('quickstart-sign-in').disabled = false;\r\n            // [END_EXCLUDE]\r\n        });\r\n\r\n        */\r\n        \r\n        /* Previous code (changed by Laura):\r\n            document.getElementById('quickstart-sign-in').addEventListener('click', toggleSignIn, false);\r\n        */\r\n\r\n        // [END authstatelistene\r\n        \r\n    }\r\n\r\n    // pre-conditions: User must be signed in.\r\n    // post-conditions: Return true if sign out successful, otherwise false.\r\n    signOut() {\r\n\r\n    }\r\n\r\n    // Takes in userID.\r\n    // Returns true boolean indicating current user is signed in.\r\n    // Otherwise return false.\r\n    loggedIn(userID) {\r\n\r\n    }\r\n}","import { loggedIn } from './LoginController';\r\nimport { db } from '../firestore';\r\nimport LocationsList from '../comps/modules/LocationsList';\r\n\r\n// takes in locationID and returns list of upvotes and downvotes\r\n// if upvote/downvote is true, update database and return updated vote count as list\r\nexport function voteTotal(user, updatefunction, ingredientID, locationID, locationInfo, upvote) {\r\n\r\n    // first check if user is logged in before any changes made\r\n    var ingredID = ingredientID;\r\n    var locID = locationID;\r\n    console.log(\"in voteTotal\");\r\n\r\n    // need help figuring out how to update this simultaneously with upvote and downvote\r\n    // ALSO (huge also) this only works if the user is for sure in the firestore\r\n\r\n\r\n    var batch = db.firestore().batch();\r\n\r\n    \r\n\r\n    var locRef = db.firestore().collection(\"ingredients\").doc(ingredID)\r\n        .collection(\"locations\").doc(locID);\r\n    var userLocRef = db.firestore().collection(\"users\").doc(user.uid).collection(\"ingredients\")\r\n        .doc(ingredID).collection(\"locations\").doc(locID);\r\n\r\n    // userLocRef.set({ upvote: true })\r\n    //     .then(function (docRef) {\r\n    //         console.log(\"Document written with ID: \", docRef.id);\r\n    //     })\r\n    //     .catch(function (error) {\r\n    //         console.error(\"Error adding document: \", error);\r\n    //     });\r\n\r\n    if (upvote) {\r\n        var newUpvotes = locationInfo.upvotes + 1;\r\n\r\n        batch.set(userLocRef, {upvote: true, downvote: false});\r\n        batch.update(locRef, {\r\n            upvotes: newUpvotes,\r\n            dvcounter: 0\r\n        });\r\n\r\n        return batch.commit().then(function () {\r\n            updatefunction();\r\n            console.log(\"Document successfully updated!\");\r\n        })\r\n            .catch(function (error) {\r\n                console.error(\"Error updating document: \", error);\r\n            });\r\n    } else {\r\n        var newDownvotes = locationInfo.downvotes + 1;\r\n        var newDVC = locationInfo.dvcounter + 1;\r\n\r\n        batch.set(userLocRef, {upvote: false, downvote: true});\r\n        batch.update(locRef, {\r\n            downvotes: newDownvotes,\r\n            dvcounter: newDVC\r\n        });\r\n\r\n        return batch.commit().then(function () {\r\n            updatefunction();\r\n            console.log(\"Document successfully updated!\");\r\n        })\r\n            .catch(function (error) {\r\n                // The document probably doesn't exist.\r\n                console.error(\"Error updating document: \", error);\r\n            });\r\n    }\r\n}\r\n\r\nexport function canVote(user, ingredID, locID) {\r\n    var userLocRef = db.firestore().collection(\"users\").doc(user.uid).collection(\"ingredients\")\r\n        .doc(ingredID).collection(\"locations\").doc(locID);\r\n    console.log(\"inside canvote\")\r\n    console.log(userLocRef)\r\n\r\n    userLocRef.get().then(function (doc){\r\n        if (doc.exists) {\r\n            console.log(\"Document data:\", doc.data());\r\n            return false;\r\n        } else {\r\n            // doc.data() will be undefined in this case\r\n            console.log(\"No such document!\");\r\n            return true;\r\n        }\r\n    }).catch(function(error) {\r\n        console.log(\"Error getting document:\", error);\r\n    });\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { voteTotal } from '../../cont/VotingController';\r\nimport {db} from '../../firestore';\r\n\r\nexport default class UpVoteButton extends Component {\r\n\r\n    //locationInfo includes:\r\n    // ingredientID\r\n    // locationID\r\n    // upvotes\r\n    // downvotes\r\n    // userID\r\n    // dateFirstReport\r\n    // lat\r\n    // long\r\n    // address\r\n    // name\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            locationInfo: props.locationInfo,\r\n            disabled: false\r\n        }\r\n\r\n        this.state.disabled = props.signedIn == null\r\n\r\n        // look up if user has already voted on this and disable\r\n    }\r\n\r\n    canVote = (user, ingredID, locID) => {\r\n\r\n        var userLocRef = db.firestore().collection(\"users\").doc(user.uid).collection(\"ingredients\")\r\n            .doc(ingredID).collection(\"locations\").doc(locID);\r\n        console.log(\"inside canvote\")\r\n        console.log(userLocRef)\r\n        \r\n         userLocRef.get().then((doc) => {\r\n            console.log(\"what is this:\")\r\n            if (doc.exists) {\r\n                console.log(\"Document data:\", doc.data());\r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such document!\");\r\n                voteTotal(this.props.signedIn, this.props.updatefunction, this.props.ingredID, this.props.locID, this.state.locationInfo, true)\r\n            }\r\n        }).catch(function(error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n    }\r\n\r\n    handleClick = () => {\r\n       this.canVote(this.props.signedIn, this.props.ingredID, this.props.locID)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button disabled={this.state.disabled} className=\"button-upvote\" onClick={this.handleClick}>\r\n                <b>{this.state.locationInfo.upvotes}</b> CONFIRMED\r\n            </button>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { voteTotal } from '../../cont/VotingController';\r\nimport {db} from '../../firestore';\r\n\r\nexport default class DownVote extends Component {\r\n\r\n    //locationInfo includes:\r\n    // ingredientID\r\n    // locationID\r\n    // upvotes\r\n    // downvotes\r\n    // userID\r\n    // dateFirstReport\r\n    // lat\r\n    // long\r\n    // address\r\n    // name\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            locationInfo: props.locationInfo,\r\n            disabled: false\r\n        }\r\n\r\n        this.state.disabled = props.signedIn == null\r\n    }\r\n\r\n    canVote = (user, ingredID, locID) => {\r\n        var userLocRef = db.firestore().collection(\"users\").doc(user.uid).collection(\"ingredients\")\r\n            .doc(ingredID).collection(\"locations\").doc(locID);\r\n        console.log(\"inside canvote\")\r\n        console.log(userLocRef)\r\n        \r\n         userLocRef.get().then((doc) => {\r\n            console.log(\"what is this:\")\r\n            if (doc.exists) {\r\n                console.log(\"Document data:\", doc.data());\r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such document!\");\r\n                voteTotal(this.props.signedIn, this.props.updatefunction, this.props.ingredID, this.props.locID, this.state.locationInfo, false)\r\n            }\r\n        }).catch(function(error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.canVote(this.props.signedIn, this.props.ingredID, this.props.locID)\r\n    }    \r\n\r\n    render() {\r\n        return (\r\n            <button disabled={this.state.disabled}  className=\"button-downvote\" onClick={this.handleClick}>\r\n                <b>{this.state.locationInfo.downvotes}</b> DIDN'T FIND\r\n            </button>\r\n        )\r\n    }\r\n}","import React, { Component, useImperativeHandle } from 'react';\r\nimport UpVoteButton from '../location/UpVoteButton';\r\nimport DownVoteButton from '../location/DownVoteButton';\r\n//import {loggedIn} from '../../cont/LoginController';\r\nimport { loggedIn } from '../../cont/LoginController';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport { db } from '../../firestore';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ErrorIcon from '@material-ui/icons/ErrorOutline';\r\n\r\nexport default class LocationInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //locationInfo includes:\r\n        // upVote\r\n        // downVote\r\n        // userID\r\n        // dateFirstReport\r\n        // lat\r\n        // long\r\n        // address\r\n        // name\r\n        // dv counter\r\n        this.ingredID = props.ingredID\r\n        this.locationInfo = props.locationInfo\r\n    }\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.locationInfo.dvcounter >= 5) {\r\n            var errorWarning = <div className=\"location-alert\"><ErrorIcon style={{ height: '20px', width: '20px', paddingRight: '2px', marginBottom: '-4px' }} /> The 5 most recent voters reported that they didn't find this ingredient here.</div>\r\n        }\r\n        console.log(\"location info rendering\")\r\n        console.log(this.locationInfo.upvotes)\r\n\r\n        return (\r\n\r\n            <div className=\"loc-info-container\">\r\n                {errorWarning}\r\n\r\n                <Grid container direction=\"row\" justify=\"center\" spacing={3}>\r\n                    <Grid item xs={12} md={5} lg={4}>\r\n                        <UpVoteButton signedIn={this.props.signedIn} updatefunction={this.props.updatefunction} locID={this.props.locID} ingredID={this.props.ingredID} locationInfo={this.locationInfo} />\r\n                        <DownVoteButton signedIn={this.props.signedIn} updatefunction={this.props.updatefunction} locID={this.props.locID} ingredID={this.props.ingredID} locationInfo={this.locationInfo} />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={7} lg={8}>\r\n                        <span>\r\n                            <div className=\"location-name\">{this.locationInfo.name}</div>\r\n                            <div className=\"location-address\">{this.locationInfo.address}</div>\r\n                            <div className=\"location-reported-by\">Reported by <span className=\"location-author\">{this.locationInfo.newUserName}</span> on {this.locationInfo.date}.</div>\r\n                        </span>\r\n                    </Grid>\r\n                </Grid >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport VotingController from '../../cont/VotingController';\r\nimport LocationInfo from '../location/LocationInfo';\r\nimport UpvoteButton from '../location/UpVoteButton';\r\nimport DownVoteButton from '../location/DownVoteButton';\r\nimport LoginController from '../../cont/LoginController';\r\nimport LoginPage from '../LoginPage';\r\nimport { db } from '../../firestore';\r\n\r\n\r\n// NEED TO FIGURE OUT HOW TO ORDER THESE, think it's supposed to be ordered by most upvotes\r\n\r\nexport default class LocationsList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.ingredientID = props.ingredientID;\r\n        this.state = {\r\n            searchRes: []\r\n        }\r\n\r\n        this.updatefunction = this.updateLocationDetails.bind(this);\r\n    }\r\n\r\n    //locationInfo includes:\r\n    // upvotes\r\n    // downvotes\r\n    // userID\r\n    // dateFirstReport\r\n    // lat\r\n    // long\r\n    // address\r\n    // name\r\n\r\n    // if user is not logged in\r\n    //            var upDownVoteRight = <p>Please <Tab label=\"sign in with Google\" \r\n    //            href=\"../LoginPage\" /> to share whether you found this ingredient. </p>;\r\n    getUserName = () => {\r\n\r\n    }\r\n\r\n    updateLocationDetails = () => {\r\n        console.log(\"the update function is being called\")\r\n        var locationQuery = db.firestore().collection(\"ingredients\").doc(this.ingredientID)\r\n            .collection(\"locations\").get();\r\n\r\n        locationQuery.then(function (querySnapshot) {\r\n            this.setState({searchRes : []})\r\n            querySnapshot.forEach(function (doc) {\r\n                // console.log(doc.id, \" => \", doc.data());\r\n                let locationID = doc.id;\r\n                let newData = doc.data();\r\n                let newAddress = newData.address;\r\n                let newDate = newData.time.toDate().toString(); // maybe we can format this later if we have tons of time\r\n                let newDVotes = newData.downvotes;\r\n                let newLat = newData.lat;\r\n                let newLong = newData.long;\r\n                let newName = newData.name;\r\n                let newUVotes = newData.upvotes;\r\n                let newUID = newData.userid;\r\n                let newDVC = newData.dvcounter;\r\n                let newUserName = newData.userName;\r\n\r\n                console.log(\"in the LOCLIST method \" + newUVotes);\r\n\r\n                let tempList = this.state.searchRes;\r\n                let newLocInfo = {\r\n                    address: newAddress,\r\n                    date: newDate,\r\n                    downvotes: newDVotes,\r\n                    lat: newLat,\r\n                    long: newLong,\r\n                    name: newName,\r\n                    upvotes: newUVotes,\r\n                    userID: newUID,\r\n                    dvcounter: newDVC,\r\n                    newUserName: newUserName\r\n                }\r\n                tempList.push(<LocationInfo signedIn={this.props.signedIn} updatefunction={this.updatefunction} \r\n                    ingredID= {this.ingredientID} locID={locationID} locationInfo={newLocInfo} />)\r\n                this.setState({\r\n                    searchRes: tempList\r\n                })\r\n            }.bind(this))\r\n        }.bind(this))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateLocationDetails()\r\n    }\r\n\r\n    render() {\r\n        console.log(\"render locations list\")\r\n        \r\n        return (\r\n            <div>\r\n                {/* updownvoteright */}\r\n                {this.state.searchRes}\r\n            </div>\r\n        )\r\n    }\r\n}","import firebase from 'firebase';\r\nrequire(\"firebase/firestore\");\r\n\r\n// query database for list of LocationModel(s) for given ingredient ID.\r\n// return list of LocationModel(s).\r\nexport function listLocations(ingredID) {\r\n\r\n}","import React, { Component, useState } from 'react';\r\nimport { compose, withProps, renderComponent } from \"recompose\"\r\nimport { Map, InfoWindow, GoogleApiWrapper, Marker, google, map} from \"google-maps-react\"\r\nimport { db } from '../../firestore';\r\n\r\nexport class EmbeddedMap extends Component{\r\n\r\n    constructor(props){\r\n      super(props);\r\n      //will eventually be props.ingredientID,\r\n      this.state={\r\n        ingredientID: props.ingredientID,\r\n        res: []\r\n      }\r\n    }\r\n\r\n    // It is also tested that if the search result is empty, the map will still shows up but without the markers\r\n    // Takes locationIDlist and returns back with a list of lat and lng\r\n    updateLocationDetails = () => {\r\n      var locationQuery = db.firestore().collection(\"ingredients\").doc(this.state.ingredientID)\r\n          .collection(\"locations\").get();\r\n\r\n      locationQuery.then(function (querySnapshot) {\r\n          querySnapshot.forEach(function (doc) {\r\n              let newData = doc.data();\r\n              let newLat = newData.lat;\r\n              let newName = newData.name;\r\n              let newLong = newData.long;         \r\n              let tempList = this.state.res;\r\n              let newObj = {\r\n                \"latitude\": newLat,\r\n                \"longitude\": newLong,\r\n                \"name\": newName\r\n              }\r\n              tempList.push(newObj)\r\n              this.setState({\r\n                  res: tempList\r\n              })\r\n          }.bind(this))\r\n      }.bind(this))\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateLocationDetails()\r\n  }\r\n\r\n    displayMarkers = () =>{\r\n      return this.state.res.map((store,index)=>{\r\n        console.log(store.name);\r\n        return <Marker key={index} id={index} \r\n        position={{\r\n          lat: store.latitude,\r\n          lng: store.longitude\r\n        }}\r\n        label= {{ color: 'black', fontWeight: 'bold', fontSize: '14px', text:store.name }}/>\r\n      })\r\n    }\r\n\r\n\r\n\r\n\r\n    render(){\r\n      //console.log(this.state.res)\r\n      return(\r\n        <Map\r\n          google={this.props.google}\r\n          zoom={8}\r\n          className=\"map\"\r\n          initialCenter={{lat:47.444, lng:-122.176}}\r\n        >\r\n        {this.displayMarkers()}\r\n        </Map>\r\n      )\r\n    }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey:'AIzaSyA0nwL7k4fGjV-btDTLTse8funRLitd_UM'\r\n})(EmbeddedMap);","import React, { Component, useEffect } from 'react';\r\nimport NewIngredientsController from '../../cont/NewIngredientsController';\r\nimport {\r\n    Dialog, DialogTitle,\r\n    TextField,\r\n    DialogContent, DialogContentText, Tab\r\n} from '@material-ui/core';\r\nimport checkmark from '../../assets/checkmark.svg';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport { classes } from 'istanbul-lib-coverage';\r\n\r\nimport {\r\n    fade,\r\n    ThemeProvider,\r\n    withStyles,\r\n    makeStyles,\r\n    createMuiTheme,\r\n} from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport ErrorIcon from '@material-ui/icons/ErrorOutline';\r\nimport Button from '@material-ui/core/Button';\r\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\r\nimport firebase from 'firebase';\r\nimport { db } from '../../firestore';\r\nimport { geocodeByAddress, getLatLng } from 'react-google-places-autocomplete';\r\n\r\nrequire('firebase/firestore');\r\n\r\nconst BootstrapInput = withStyles(theme => ({\r\n    root: {\r\n        'label + &': {\r\n            marginTop: '1.6em',\r\n        },\r\n    },\r\n    input: {\r\n        borderRadius: 6,\r\n        position: 'relative',\r\n        backgroundColor: '#F2F2F2',\r\n        border: '1px solid #999999',\r\n        fontSize: '16px',\r\n        width: '100%',\r\n        padding: '10px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        // Use the system font instead of the default Roboto font.\r\n        fontFamily: [\r\n            'Open Sans',\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n        ].join(','),\r\n        '&:focus': {\r\n            boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n            borderColor: theme.palette.primary.main,\r\n        },\r\n    },\r\n}))(InputBase);\r\n\r\nconst BootstrapButton = withStyles({\r\n    root: {\r\n        borderRadius: 6,\r\n        boxShadow: 'none',\r\n        textTransform: 'none',\r\n        fontSize: 16,\r\n        fontWeight: 600,\r\n        width: '100%',\r\n        padding: '6px 12px',\r\n        border: 'none',\r\n        lineHeight: 1.5,\r\n        backgroundColor: '#0A8576',\r\n        fontFamily: [\r\n            'Open Sans',\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n        ].join(','),\r\n        '&:hover': {\r\n            backgroundColor: '#087568',\r\n            boxShadow: 'none',\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: '#087568',\r\n        },\r\n        '&:focus': {\r\n            boxShadow: '0 0 0 0.2rem rgba(10, 133, 118,.5)',\r\n        },\r\n    },\r\n})(Button);\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    margin: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#0A8576',\r\n        }\r\n    },\r\n});\r\n\r\n// pre-conditions: \r\n//      props must be filled with a Header text \r\n//      and DOM elements to fill Modal.\r\n// post-conditions:\r\n//      passes props and renders modal in render function\r\nexport function Modal(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n    // have an if statement outside of component that renders this component\r\n    // to keep button seperate from this component\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n    // renders given DOM elements inside of modal\r\n    return (\r\n        <Dialog open={props.open} onClose={props.handleClose}>\r\n            <DialogTitle id=\"form-dialog-title\">{props.title}</DialogTitle>\r\n            <DialogContent>\r\n                {props.content}\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport function NewIngredientModal(props) {\r\n    const classes = useStyles();\r\n    const [submit, setSubmit] = React.useState(false);\r\n    const [ingredName, setIngredName] = React.useState(\"\");\r\n    const handleClose = () => {\r\n        //e.preventDefault();\r\n        console.log(ingredName);\r\n        if (ingredName.length > 0) {\r\n            setSubmit(true);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    var ingredItems = (\r\n        <form className={classes.root} noValidate>\r\n            <ThemeProvider theme={theme}>\r\n\r\n                <FormControl fullWidth className={classes.margin}>\r\n                    <InputLabel shrink required htmlFor=\"bootstrap-input\">\r\n                        Ingredient Name\r\n                    </InputLabel>\r\n                    <BootstrapInput inputProps={{ maxLength: 150 }} aria-label=\"ingredient name to submit\" onChange={(e) => setIngredName(e.target.value)} id=\"bootstrap-input\" />\r\n                </FormControl>\r\n                <FormControl fullWidth className={classes.margin}>\r\n                    <InputLabel shrink htmlFor=\"bootstrap-input\">\r\n                        Comments\r\n                    </InputLabel>\r\n                    <BootstrapInput inputProps={{ maxLength: 1000 }} aria-label=\"comments on ingredient submission\" id=\"bootstrap-input\" />\r\n                </FormControl>\r\n\r\n                <BootstrapButton aria-label=\"submit the new ingredient form\" variant=\"contained\" color=\"primary\" disableRipple className={classes.margin} onClick={handleClose}>\r\n                    Submit\r\n                </BootstrapButton>\r\n\r\n                {/*error state for \"Ingredient Name\" field*/}\r\n                <FormControl fullWidth className={classes.margin}>\r\n                    <InputLabel shrink required>\r\n                        Ingredient Name\r\n                    </InputLabel>\r\n                    <BootstrapInput inputProps={{ maxLength: 150 }} aria-label=\"ingredient name to input\" id=\"bootstrap-input\" />\r\n                    <FormHelperText id=\"component-error-text\">\r\n                        <ErrorIcon style={{ height: '16px', width: '16px', paddingRight: '3px', marginBottom: '-3px' }} />\r\n                        This field cannot be left blank.\r\n                    </FormHelperText>\r\n                </FormControl>\r\n\r\n                {/* error state for \"Submit\" button*/}\r\n                <BootstrapButton aria-label=\"submit the new ingredient form\" variant=\"contained\" color=\"primary\" disableRipple className={classes.margin}>\r\n                    Submit\r\n                </BootstrapButton>\r\n                <div id=\"form-error-container\">\r\n                    <FormHelperText id=\"form-error-text\" className={classes.margin}>Please resolve the errors above.</FormHelperText>\r\n                </div>\r\n\r\n            </ThemeProvider>\r\n        </form>\r\n        /*\r\n    <div>\r\n        <TextField\r\n            id=\"filled-basic\"\r\n            label=\"Ingredient Name\"\r\n            margin=\"dense\"\r\n            variant=\"filled\"\r\n            fullWidth\r\n            onChange={(e) => setIngredName(e.target.value)}\r\n            error={ingredName === \"\"}\r\n            helperText={ingredName === \"\" ? \"This field cannot be left blank\" : ' '}\r\n            value={ingredName}\r\n        />\r\n        <TextField\r\n            id=\"filled-basic\"\r\n            label=\"Comments (optional)\"\r\n            margin=\"normal\"\r\n            variant=\"filled\"\r\n            fullWidth\r\n        />\r\n        <Button onClick={handleClose}>\r\n            Submit Ingredient\r\n        </Button>\r\n    </div>\r\n    */\r\n    );\r\n    if (submit) {\r\n        ingredItems = (\r\n            <div>\r\n                <Tab icon={<img src={checkmark}></img>} />\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <Modal title={\"Suggest a new ingredient\"} content={ingredItems} />\r\n    );\r\n}\r\n\r\n// props must contain ingredientID\r\nexport function NewLocationModal(props) {\r\n    const classes = useStyles();\r\n    const [submit, setSubmit] = React.useState(false);\r\n    const [userInput, setInput] = React.useState(\"\");\r\n    // {lat: number, lng: number}\r\n     const [latLng, setLatLng] = React.useState({});\r\n    const handleClose = () => {\r\n        props.onClose(false);\r\n    }\r\n    // const [input, setLocationInput] = React.useState({\r\n    //     id: \"your\"\r\n    // });\r\n    var autocompletionRequest = {\r\n        bounds: [\r\n            { lat: 47.720255, lng: -122.402083 },\r\n            { lat: 47.589166, lng: -122.286779 }\r\n          ],\r\n        location: { lat: 47.6062, lng: -122.3321 },\r\n        componentRestrictions: {\r\n            country: [\"us\"]\r\n        },\r\n        types: ['establishment']\r\n    }\r\n\r\n    \r\n    // TODO: RENDER ONLY WHEN USERINPUT IS EMPTY\r\n    let error = (\r\n        <FormHelperText id=\"component-error-text\" error={userInput === \"\"}>\r\n            <ErrorIcon style={{ height: '16px', width: '16px', \r\n            paddingRight: '3px', marginBottom: '-3px' }} />\r\n                This field cannot be left blank.\r\n        </FormHelperText>\r\n    );\r\n    \r\n    const addNewLocation = (input, latLng) => {\r\n        console.log(\"INPUT ID \" + input[\"id\"])\r\n        console.log(\"Lat: \" + \" \" + latLng[\"lat\"])\r\n        db.firestore().collection(\"ingredients\").doc(props.ingredientID).collection(\"locations\")\r\n        .doc(input[\"id\"]).set(\r\n            {\r\n                name: input[\"structured_formatting\"][\"main_text\"],\r\n                address: input[\"description\"],\r\n                downvotes: 0,\r\n                upvotes: 0,\r\n                userid: props.user.uid,\r\n                dvcounter: 0,\r\n                id: input[\"id\"],\r\n                time: firebase.firestore.FieldValue.serverTimestamp(),\r\n                lat: latLng[\"lat\"],\r\n                long: latLng[\"lng\"],\r\n                userName: props.user.displayName\r\n            }\r\n        ).then(function() {\r\n            console.log(\"ingredient location has been stored\")\r\n        }).catch(function(error) {\r\n            console.log(\"error in addNewLocation: \" + error)\r\n        });\r\n    }\r\n\r\n    const handleSelectLoc = (input) => {\r\n        console.log(\"INPUT ID AFTER SET\" + input[\"id\"]);\r\n        setInput(input);\r\n        geocodeByAddress(input[\"description\"]).then(results => getLatLng(results[0]))\r\n        .then(({lat, lng}) => {\r\n            // {lat: number, lng: number}\r\n            setLatLng({lat, lng});\r\n\r\n        }).catch((error) => {\r\n            console.log(\"error: \" + error)\r\n        }).finally(() => {\r\n        });\r\n        console.log(input);\r\n        // TODO: add date and change ID to props.ingredientID\r\n        \r\n    }\r\n    \r\n    const handleClick = () => {\r\n        if (userInput) {\r\n            addNewLocation(userInput, latLng);\r\n            handleClose();\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        console.log(\"handleChange has been called\")\r\n        console.log(event)\r\n    }\r\n    var locationItems = (\r\n        <form className={classes.root} noValidate>\r\n            <ThemeProvider theme={theme}>\r\n\r\n                <FormControl fullWidth className={classes.margin}>\r\n                    <GooglePlacesAutocomplete id=\"bootstrap-input\"\r\n                        placeholder=\"Store name or address...\"\r\n                        autocompletionRequest={autocompletionRequest}\r\n                        onSelect={handleSelectLoc}\r\n                        onChange={\r\n                            handleChange\r\n                        }\r\n                    />\r\n                    {userInput === \"\" ? error: \"\"}\r\n                </FormControl>\r\n\r\n                <BootstrapButton aria-label=\"submit new ingredient location\" variant=\"contained\" color=\"primary\" \r\n                disableRipple className={classes.margin} onClick={handleClick}>\r\n                    Submit\r\n                </BootstrapButton>\r\n            </ThemeProvider>\r\n        </form>\r\n    )\r\n        /*\r\n        <div>\r\n            <TextField\r\n             id=\"filled-basic\"\r\n             label=\"Location\"\r\n             margin=\"normal\"\r\n             variant=\"filled\"\r\n             fullWidth\r\n            />\r\n            <Button onClick={NewIngredientsController}>\r\n                Submit\r\n            </Button>\r\n        </div>\r\n        */\r\n    if (submit) {\r\n        locationItems = (\r\n            <div>\r\n                <Tab icon={<img src={checkmark}></img>} />\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <Modal open={props.open} title={\"Report a new \" + props.ingredName + \" location\"} content={locationItems} handleClose={handleClose}/>\r\n    );\r\n}\r\nexport default Modal;","import React, { Component, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport LocationsList from './modules/LocationsList';\r\nimport LocationsController from '../cont/LocationsController';\r\nimport EmbeddedMap from './modules/EmbeddedMap';\r\nimport Modal from './modules/Modal';\r\nimport firebase from 'firebase';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { db } from '../firestore';\r\nimport { fbind } from 'q';\r\n// import signedIn from '../cont/LoginController';\r\nimport LoginController from '../cont/LoginController';\r\nimport {NewLocationModal} from '../comps/modules/Modal';\r\nrequire('firebase/firestore');\r\n\r\n// renders the SpecingPage for a specific ingredient\r\nexport default class SpecingPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props)\r\n        this.state = {\r\n            ingredientID : this.props.location.state.ingredientID,\r\n            ingredientName : this.props.location.state.ingredientName,\r\n            isEmpty : true,\r\n            modalOpen: false\r\n        }\r\n        this.updatefunction = this.checkLocations.bind(this);\r\n    }\r\n    \r\n    //updates ingredient name \r\n    // updateIngredName = () => {\r\n    //     db.firestore().collection(\"ingredients\").doc(this.state.ingredientID).onSnapshot(function (doc) {\r\n    //         this.setState({ingredientName : doc.data().name})\r\n    //     }.bind(this))\r\n    // }\r\n    \r\n    // sees if there are any known locations for that ingredient\r\n    checkLocations = () => {\r\n        var locationQuery = db.firestore().collection(\"ingredients\").doc(this.state.ingredientID)\r\n        .collection(\"locations\").get();\r\n        locationQuery.then(function (querySnapshot) {\r\n            console.log(querySnapshot.empty)\r\n            this.setState({\r\n                isEmpty : querySnapshot.empty\r\n            })\r\n        }.bind(this))\r\n    }\r\n\r\n    handleLoc = () => {\r\n        this.setState({modalOpen : true});\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({modalOpen : false});\r\n    }\r\n\r\n    // TODO: update location list when new location is submitted\r\n    handleMap = () => {\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.checkLocations();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n    render() {\r\n\r\n        let searchRes = null, i = null;\r\n        let cannotVote = null;\r\n        let suggestLoc = null;\r\n        if (this.state.isEmpty) { \r\n            searchRes = <div className=\"large-italic\">Phooey. There are no known locations yet.</div>;\r\n        } else {\r\n            searchRes = <LocationsList signedIn={this.props.signedIn} ingredientID={this.state.ingredientID} />\r\n        }\r\n\r\n        console.log(this.props.signedIn)\r\n        if (!this.props.signedIn) {\r\n            cannotVote = <div className=\"cannot-vote-alert\"> Please <a href=\"../LoginPage\">sign in with Google</a> to share where you found this ingredient.</div>;\r\n        } else {\r\n            suggestLoc = (\r\n                <span>Know where to buy this? <span id=\"location-report\" onClick={this.handleLoc}>Report a new location</span>.</span>\r\n            );\r\n        }\r\n        \r\n        return (\r\n            <div className=\"content-container\">\r\n                <NewLocationModal open={this.state.modalOpen} onClose={this.handleClose} \r\n                user={this.props.signedIn} mapUpdated={this.handleMap} ingredientID={this.state.ingredientID}\r\n                ingredName={this.state.ingredientName}/>\r\n                <Grid container direction=\"row\" justify=\"center\" spacing={3} >\r\n                    <Grid item xs={12} >\r\n                        {cannotVote}\r\n                        <div className=\"spec-ingredient-label\">\r\n                            Ingredient\r\n                        </div>\r\n                        <div className=\"spec-ingredient-title\">\r\n                            {this.state.ingredientName}\r\n                        </div>\r\n                        <div className=\"spec-ingredient-subtext\">\r\n                            {suggestLoc}\r\n                        </div>\r\n\r\n                        <Grid container spacing={8} justify=\"flex-start\" id=\"special-snowflake-grid\">\r\n                            <Grid item xs={12} md={7} id=\"spec-ingredient-grid-block\">\r\n                                <div className=\"locations-container\" />{searchRes}\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} md={5 } >\r\n                                <div className=\"map-container\">\r\n                                    {this.state.modalOpen ? <p></p> : \r\n                                    <EmbeddedMap ingredientID={this.state.ingredientID}/>\r\n                                    }\r\n                                </div>\r\n\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Modal from '../modules/Modal';\r\nimport {Card, CardActionArea, CardContent, CardMedia, Typography} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    width: '100%',\r\n    boxShadow: 'none',\r\n    textAlign: 'center',\r\n    borderRadius: '0px'\r\n  },\r\n  media: {\r\n    height: 250,\r\n  },\r\n  content: {\r\n\r\n    padding: '8px 16px 16px 16px',\r\n  },\r\n  name: {\r\n    fontWeight: 'bold',\r\n    fontFamily: 'Open Sans',\r\n    fontSize: '20px',\r\n  },\r\n  role: {\r\n    fontWeight: 400,\r\n    fontFamily: 'Open Sans',\r\n    fontSize: '16px',\r\n    color: '#888888',\r\n  }\r\n});\r\n\r\n\r\n\r\nexport default function TeamCard(props) {\r\n  const {FirstName, LastName, Position, picture}=props;\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={picture}\r\n          title={FirstName + \" Photo\"}\r\n        />\r\n        <CardContent className={classes.content}>\r\n          <Typography className={classes.name}>\r\n            {FirstName + \" \" + LastName}\r\n          </Typography>\r\n          <Typography className={classes.role}>\r\n            {Position}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}","import React, { Component } from 'react';\r\n// import { NavLink } from 'react-router-dom';\r\nimport TeamCard from './modules/TeamCard';\r\nimport Lauren from '../imgs/Lauren.jpg';\r\nimport Cate from '../imgs/Cate.png';\r\nimport Anthony from '../imgs/Anthony.jpg';\r\nimport Laura from '../imgs/Laura.PNG';\r\nimport Brian from '../imgs/brian.jpg';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\n\r\nexport default class AboutPage extends Component {\r\n\r\n\r\n    // renders a TeamCard for each team member, as well as a paragraph description of the project\r\n    render() {\r\n\r\n        let featuredCards = (\r\n            <Grid container spacing={2} justify=\"flex-start\">\r\n                <Grid item xs={12} sm={6} md={4} xl><TeamCard FirstName='Anthony' LastName='Nguyen' Position='Chief Executive Officer' picture={Anthony} /></Grid>\r\n                <Grid item xs={12} sm={6} md={4} xl><TeamCard FirstName='Brian' LastName='Uyeda' Position='Chief Technology Officer' picture={Brian} /></Grid>\r\n                <Grid item xs={12} sm={6} md={4} xl><TeamCard FirstName='Cate' LastName='Lyu' Position='Chief Technology Officer' picture={Cate} /></Grid>\r\n                <Grid item xs={12} sm={6} md={4} xl><TeamCard FirstName='Laura' LastName='Freeman' Position='Chief Design Officer' picture={Laura} /></Grid>\r\n                <Grid item xs={12} sm={6} md={4} xl><TeamCard FirstName='Lauren' LastName='Smith' Position='Project Manager' picture={Lauren} /></Grid>\r\n            </Grid>\r\n        );\r\n\r\n        return (\r\n            <div className=\"content-container\">\r\n                <Grid container direction=\"row\" justify=\"center\" spacing={3}>\r\n                    <Grid item xs={12}>\r\n\r\n\r\n                        <div className=\"page-title\">About Us</div>\r\n                        {featuredCards}\r\n                        <p className=\"about-paragraph\">\r\n                            Thanks to easily accessible online cookbooks, home cooks from all around the country are able to\r\n                            quickly and efficiently explore recipes for foods that they've never tried before. However, a\r\n                            consequence of all of these different recipes online is that cooks will see an interesting recipe\r\n                            for a meal from a different culture, but that recipe will contain obscure and hard to obtain\r\n                            ingredients. This barrier might be a big enough of an annoyance to deter amatuer chefs from creating\r\n                            and experiencing other cultural cuisines. As of now, there is no direct solution that fixes this\r\n                            issue of uncertainty. That's where Bonito comes in. Bonito provides a crowd-sourced space for fellow\r\n                            home-cooks to share where they sourced hard-to-find ingredients.\r\n                        </p>\r\n                        \r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport { List, ListItem, ListItemText } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport axios from 'axios';\r\nimport {db} from '../firestore';\r\nimport {Redirect} from 'react-router-dom';\r\nconst NutrixURL = 'https://trackapi.nutritionix.com/v2/search/instant';\r\n\r\n// takes in ingredientID and ingredientname and creates ListItem with Link to\r\n// respective SpecIngPage\r\nfunction ListItemLink(props) {\r\n\tlet link = '/SpecingPage/' + props.ingredientID;\r\n\tconsole.log(\"List item for : \" + props.ingredientName + \" created\");\r\n\tconst to = {\r\n\t\tpathname: link,\r\n\t\tstate: {\r\n\t\t\tingredientName: props.ingredientName\r\n\t\t}\r\n\t};\r\n\tconst renderLink = React.useMemo(\r\n\t\t() =>\r\n\t\t\tReact.forwardRef((linkProps, ref) => (\r\n\t\t\t\t<Link to={to} {...linkProps} ref={ref} />\r\n\t\t\t)),\r\n\t\t[to]\r\n\t);\r\n\treturn (\r\n\t\t<li>\r\n\t\t\t<ListItem button component={renderLink}>\r\n\t\t\t\t<ListItemText primary={props.name} />\r\n\t\t\t</ListItem>\r\n\t\t</li>\r\n\t);\r\n}\r\n\r\n\r\n// ingredientName must not exist in db\r\nfunction storeIngred (ingredientName) {\r\n\tvar ingredID = \"\";\r\n\tconsole.log(ingredientName)\r\n\tingredID = db.firestore().collection('ingredients').doc().id;\r\n\tdb.firestore().collection(\"ingredients\").doc(ingredID).set(\r\n\t\t{\r\n\t\t\tname: ingredientName\r\n\t\t}\r\n\t)\r\n\t.then((docRef) => {\r\n\t\tdb.firestore().collection('ingredNames').doc(ingredientName)\r\n\t\t.set({ingredID : ingredID}).then((docRef) => {\r\n\t\t\tconsole.log(\"Document written with ID to ingredNames: \" + ingredientName)\r\n\t\t}).catch(function(error) {\r\n\t\t\tconsole.error(\"Error adding document: \", error);\r\n\t\t});\r\n\t\tconsole.log(\"Document written with ID: \", ingredID);\r\n\t})\r\n\t.catch(function(error) {\r\n\t\tconsole.error(\"Error adding document: \", error);\r\n\t});\r\n\treturn ingredID;\r\n}\r\n\r\n// ingredientName must exist inside of db\r\n// function getIngred (ingredientName) {\r\n// \tconsole.log(\"getIngred called\")\r\n// \tdb.firestore().collection(\"ingredNames\").doc(ingredientName).get()\r\n// \t.then((doc) => {\r\n// \t\tconsole.log(\"getIngred called\")\r\n// \t\tconsole.log(doc.id, \" => \", doc.data());\r\n// \t\treturn doc.id;\r\n// \t});\r\n// }\r\n\r\nexport default function ResultsPage(props) {\r\n\tconst [ingredList, setList] = useState([]);\r\n\tconst [fetchingData, setFetch] = useState(false);\r\n\tconst [goDirect, setDirect] = useState(false);\r\n\tconst [ingredID, setID] = useState(\"\");\r\n\tconst [stateName, setName] = useState(\"\");\r\n\tlet displayList = \"\";\r\n\t\r\n\tconst checkIngredDB = (ingredientName) => {\r\n\t\tconsole.log(ingredientName)\r\n\t\treturn db.firestore().collection(\"ingredNames\").doc(ingredientName).get()\r\n\t}\r\n\r\n\tconst handleClick = (event) => {\r\n\t\tsetName(event.currentTarget.id);\r\n\t\tsetFetch(true);\r\n\t\tsetDirect(true);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getNutrix = async food => {\r\n\t\t\ttry {\r\n\t\t\t\tsetList([]);\r\n\t\t\t\tsetFetch(true);\r\n\t\t\t\tconst response = await axios.get(NutrixURL, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t'x-app-id': '3e44cfbe',\r\n\t\t\t\t\t\t'x-app-key': 'be52ed410ebd23630810aa7ca9807c74'\r\n\t\t\t\t\t},\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t\tquery: food,\r\n\t\t\t\t\t\tself: false,\r\n\t\t\t\t\t\tcommon_general: false,\r\n\t\t\t\t\t\tcommon_restaurant: false\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tsetList(response.data['branded']);\r\n\t\t\t\tsetFetch(false);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t\tsetList([]);\r\n\t\t\t\tsetFetch(false);\r\n\t\t\t}\r\n\t\t};\r\n\t\tgetNutrix(props.userInput);\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (stateName) {\r\n\t\t\tcheckIngredDB(stateName).then((doc) => {\r\n\t\t\t\tlet ingredID = \"\";\r\n\t\t\t\tif (doc.exists) {\r\n\t\t\t\t\tconsole.log(\"ingredientName exists in DB: \" + doc.data().ingredID)\r\n\t\t\t\t\tingredID = doc.data().ingredID;\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(\"ingredient doesnt exist in db\")\r\n\t\t\t\t\tingredID = storeIngred(stateName);\r\n\t\t\t\t}\r\n\t\t\t\tsetID(ingredID);\r\n\t\t\t\tsetFetch(false);\r\n\r\n\t\t\t})\r\n\t\t\t.catch(function(error) {\r\n\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t})\r\n\t\t}\r\n\t}, [goDirect]);\r\n\r\n\tif (ingredList.length > 0) {\r\n\t\tdisplayList = ingredList.map(function(item, i) {\r\n\t\t\treturn (\r\n\t\t\t\t<ListItem button id={item['food_name']} onClick={handleClick}>\r\n\t\t\t\t\t<ListItemText primary={item['food_name']} />\r\n\t\t\t\t</ListItem>\r\n\t\t\t);\r\n\t\t});\r\n\t} else {\r\n\t\tdisplayList = (\r\n\t\t\t<ListItem button>\r\n\t\t\t\t<ListItemText primary=\"loading\" />\r\n\t\t\t</ListItem>\r\n\t\t);\r\n\t}\r\n\r\n\tlet display = (\r\n\t\t<div className=\"content-container\">\r\n\t\t\t<Grid container direction=\"row\" justify=\"center\" spacing={3}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<div className=\"page-title\">\r\n\t\t\t\t\t\t\"{' '}\r\n\t\t\t\t\t\t<span className=\"search-query\">{props.userInput}</span>{' '}\r\n\t\t\t\t\t\t\"\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"large-italic\">\r\n\t\t\t\t\t\tFound {ingredList.length} results for \"{props.userInput}\r\n\t\t\t\t\t\t\":\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<List component=\"nav\" aria-label=\"search results\">\r\n\t\t\t\t\t\t{displayList}\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n\r\n\tif (goDirect & !fetchingData) {\r\n\t\tdisplay = (\r\n\t\t\t<Redirect \r\n\t\t\t\tto={{\r\n\t\t\t\t\tpathname: \"/SpecIngPage/\" + ingredID,\r\n\t\t\t\t\tstate: { \r\n\t\t\t\t\t\tingredientName : stateName,\r\n\t\t\t\t\t\tingredientID: ingredID\r\n\t\t\t}}} ></Redirect>\r\n\t\t\t\r\n\t\t);\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{display}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n","import React, {Component} from 'react';\r\n/* global google */\r\n\r\n// uses give string search and returns relevant locations\r\n// if locations are outside of Seattle area, return an empty list\r\nexport default function validateLocation(address) {\r\n    //codeAddress(address);\r\n}\r\n\r\nexport class GoogleSearch extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.autocompleteInput = React.createRef();\r\n    this.autocomplete = null;\r\n    this.handlePlaceChanged = this.handlePlaceChanged.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    var defaultBounds = new google.maps.LatLngBounds(\r\n        new google.maps.LatLng(47.720255, -122.402083),\r\n        new google.maps.LatLng(47.589166, -122.286779)\r\n    );\r\n    this.autocomplete = new google.maps.places.Autocomplete(this.autocompleteInput.current,\r\n        {\r\n            bounds: defaultBounds,\r\n            types: ['establishments'],\r\n            strictBounds: true\r\n        });\r\n        console.log(\"googleplacesmounted\");\r\n    this.autocomplete.addListener('place_changed', this.handlePlaceChanged);\r\n  }\r\n\r\n  handlePlaceChanged(){\r\n    const place = this.autocomplete.getPlace();\r\n    this.props.onPlaceLoaded(place);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <input ref={this.autocompleteInput}  id=\"autocomplete\" placeholder=\"Enter your address...\"\r\n         type=\"text\"></input>\r\n    );\r\n  }\r\n}\r\n\r\n        // Initialize Google Autocomplete \r\n        /*global google*/\r\n\r\n// function codeAddress(address) {\r\n//     console.log(\"the codeAddress has been called!\");\r\n//     var address = address;\r\n//     geocoder.geocode( { 'address': address}, function(results, status) {\r\n//       if (status == 'OK') {\r\n//         // map.setCenter(results[0].geometry.location);\r\n//         // var marker = new google.maps.Marker({\r\n//         //     map: map,\r\n//         //     position: results[0].geometry.location\r\n//         // });\r\n//         console.log(results[0].geometry.location);\r\n//       } else {\r\n//         alert('Geocode was not successful for the following reason: ' + status);\r\n//       }\r\n//     });\r\n//   }\r\n  \r\n","import React, { Component } from 'react';\r\nimport logo from '../assets/logo.svg';\r\nimport '../css/App.css';\r\nimport Navbar from './modules/Navbar.js';\r\nimport HomePage from './HomePage';\r\nimport LoginPage from './LoginPage';\r\nimport SpecingPage from './SpecingPage';\r\nimport AboutPage from './AboutPage';\r\nimport ResultsPage from './ResultsPage';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n//import LoginController from '../cont/LoginController';\r\nimport { Modal, NewIngredientModal, NewLocationModal } from './modules/Modal';\r\nimport {CircularProgress} from '@material-ui/core';\r\nimport firebase from 'firebase';\r\nimport {GoogleSearch} from '../cont/PlacesController';\r\nrequire(\"firebase/firestore\");\r\n\r\n// renders application with all neccesary components\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //this.signedIn = this.signedIn.bind(this);\r\n    //var user = new LoginController(this.signedIn);\r\n    this.state = {\r\n      user: null,\r\n      userInput: \"\",\r\n      ingredList: [],\r\n      loading: false\r\n    }\r\n  }\r\n\r\n  handleSignIn = () => {\r\n    var provider = new firebase.auth.GoogleAuthProvider();\r\n    // TODO: WHY IS THEN() NOT CALLED?\r\n    // guess it's the problem of the setState function?\r\n    var userInfo = firebase.auth().signInWithPopup(provider).then(function(result) {\r\n      // this.setState({user: result.user});\r\n      localStorage.setItem(\"userName\",result.user.displayName);\r\n      console.log(this.state.user);\r\n      console.log(localStorage.getItem(\"userName\"));\r\n    }).catch(function(error) {\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        var email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential;\r\n    });\r\n  }\r\n\r\n  handleSignOut = () => {\r\n    firebase.auth().signOut().then(function() {\r\n      console.log(\"sign out successfull\")\r\n    }).catch(function(error) {\r\n      // An error happened.\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.authUnsubFunction = firebase.auth().onAuthStateChanged((firebaseUser) => {\r\n      if (firebaseUser) {\r\n        this.setState({user: firebaseUser, loading: false});\r\n      } else {\r\n        this.setState({user: null, loading: false});\r\n      }\r\n    });\r\n  }\r\n\r\n\t// if the user is signed-in, will log user out when exiting the web application\r\n  componentDidUpdate() {\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.authUnsubFunction();\r\n\r\n    this.setState({errorMessage: null});\r\n    firebase.auth().signOut().catch(\r\n      (error) => {\r\n        this.setState({errorMessage : error.message});\r\n      }\r\n    );\r\n  }\r\n\r\n  grabSearchInput = (input) => {\r\n    this.setState({userInput: input});\r\n  }\r\n\r\n  // TODO: USE REDIRECT WHEN SEARCH IS INITIATED DO NOT USE TO= ON BUTTON PRESS\r\n  render() {\r\n    // if (this.state.loading) {\r\n    //   return <CircularProgress />;\r\n    // } else {\r\n      let signedIn = false;\r\n      let navbar = (\r\n        <Navbar loggedIn={false} />\r\n      );\r\n      if (this.state.user) {\r\n        navbar = <Navbar loggedIn={true} handleSignOut={this.handleSignOut}/>\r\n        signedIn = true;\r\n      }\r\n        return (\r\n          <div>\r\n            {navbar}\r\n            <main>\r\n              <Switch>\r\n                <Route exact path=\"/\" render={(routerProps) => (\r\n                  <HomePage {...routerProps} grabSearchInput={this.grabSearchInput} />\r\n                )}/>\r\n                <Route path=\"/AboutPage\" component={AboutPage} />\r\n                <Route path=\"/LoginPage\" render={(routerProps) => (\r\n                  <LoginPage {...routerProps} signInCallback={this.handleSignIn} />\r\n                )} />\r\n                <Route path='/SpecIngPage/:ingredientID' render={(routerProps) => (\r\n                  <SpecingPage {...routerProps} signedIn={this.state.user} />\r\n                )} />\r\n                <Route path='/results' render={(routerProps) => (\r\n                  <ResultsPage {...routerProps} userInput={this.state.userInput} />\r\n                )} />\r\n              </Switch>\r\n            </main>\r\n          </div>\r\n        );\r\n      }\r\n\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './comps/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport firebase from 'firebase/app';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\n// var config = {\r\n//     apiKey: \"AIzaSyA18aSKV9qp66x5s0FL6y_xcdjlBeBRVng\",\r\n//     authDomain: \"bonito-collab.firebaseapp.com\",\r\n//     databaseURL: \"https://bonito-collab.firebaseio.com\",\r\n//     projectId: \"bonito-collab\",\r\n//     storageBucket: \"bonito-collab.appspot.com\",\r\n//     messagingSenderId: \"49830494344\",\r\n//     appId: \"1:49830494344:web:f4a868b361ec362f571f3d\",\r\n//     measurementId: \"G-683YLNRKFH\"\r\n//   };\r\n\r\n// firebase.initializeApp(config);\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/checkmark.39a102cf.svg\";"],"sourceRoot":""}